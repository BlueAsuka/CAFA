x = solver.IntVar(0, solver.infinity(), 'x')
y = solver.IntVar(0, solver.infinity(), 'y')
solver.Add(46 * x + 13 * y <= 1345)
solver.Add(43 * x + 4 * y <= 346)
solver.Add(56 * x + 45 * y <= 1643)
objective = solver.Objective()
objective.SetCoefficient(x, 10.0)
objective.SetCoefficient(y, 15.0)
objective.SetMaximization()
apples = solver.IntVar(0, solver.infinity(), 'apples')
pears = solver.IntVar(0, solver.infinity(), 'pears')
solver.Add(apples + pears <= 50)
solver.Add(apples >= 5)
solver.Add(pears >= 10)
solver.Add(pears <= 2 * apples)
objective = solver.Objective()
objective.SetCoefficient(apples, 2.0)
objective.SetCoefficient(pears, 4.0)
objective.SetMaximization()
small = solver.IntVar(0, solver.infinity(), 'small')
large = solver.IntVar(0, solver.infinity(), 'large')
solver.Add(10 * small + 20 * large <= 500)
solver.Add(15 * small + 20 * large <= 700)
objective = solver.Objective()
objective.SetCoefficient(small, 20.0)
objective.SetCoefficient(large, 30.0)
objective.SetMaximization()
light_oil = solver.NumVar(0, solver.infinity(), 'light_oil')
non_sticky_oil = solver.NumVar(0, solver.infinity(), 'non_sticky_oil')
heavy_oil = solver.NumVar(0, solver.infinity(), 'heavy_oil')
solver.Add(3 * light_oil + 6 * non_sticky_oil + 9 * heavy_oil <= 250)
solver.Add(3 * light_oil + 2 * non_sticky_oil + 3 * heavy_oil <= 150)
objective = solver.Objective()
objective.SetCoefficient(light_oil, 550.0)
objective.SetCoefficient(non_sticky_oil, 750.0)
objective.SetCoefficient(heavy_oil, 950.0)
objective.SetMaximization()
hams = solver.IntVar(0, solver.infinity(), 'hams')
pork_ribs = solver.IntVar(0, solver.infinity(), 'pork_ribs')
solver.Add(4 * hams + 2 * pork_ribs <= 4000)
solver.Add(2.5 * hams + 3.5 * pork_ribs <= 4000)
objective = solver.Objective()
objective.SetCoefficient(hams, 150.0)
objective.SetCoefficient(pork_ribs, 300.0)
objective.SetMaximization()
phones_space = solver.IntVar(0, 100, 'phones_space')
laptops_space = solver.IntVar(0, 100, 'laptops_space')
solver.Add(phones_space + laptops_space <= 100)
solver.Add(12 * phones_space + 15 * laptops_space <= 5000)
solver.Add(2 * phones_space + 3 * laptops_space <= 2000)
objective = solver.Objective()
objective.SetCoefficient(phones_space, 50.0)
objective.SetCoefficient(laptops_space, 70.0)
objective.SetMaximization()
e = solver.IntVar(0, solver.infinity(), 'e')
l = solver.IntVar(0, solver.infinity(), 'l')
solver.Add(20 * e + 8 * l >= 400)
solver.Add(e >= 3 * l)
solver.Add(l >= 2)
objective = solver.Objective()
objective.SetCoefficient(e, 5.0)
objective.SetCoefficient(l, 2.0)
objective.SetMinimization()
desks = solver.IntVar(0, solver.infinity(), 'desks')
drawers = solver.IntVar(0, solver.infinity(), 'drawers')
solver.Add(40 * desks + 30 * drawers <= 4000)
solver.Add(20 * desks + 10 * drawers <= 3500)
objective = solver.Objective()
objective.SetCoefficient(desks, 100.0)
objective.SetCoefficient(drawers, 90.0)
objective.SetMaximization()
reg_panes = solver.IntVar(0, solver.infinity(), 'reg_panes')
temp_panes = solver.IntVar(0, solver.infinity(), 'temp_panes')
solver.Add(3 * reg_panes + 5 * temp_panes <= 300)
solver.Add(5 * reg_panes + 8 * temp_panes <= 300)
objective = solver.Objective()
objective.SetCoefficient(reg_panes, 8.0)
objective.SetCoefficient(temp_panes, 10.0)
objective.SetMaximization()
vintage = solver.IntVar(10, solver.infinity(), 'vintage')
regular = solver.IntVar(0, solver.infinity(), 'regular')
solver.Add(500 * vintage + 750 * regular <= 100000)
solver.Add(regular >= 4 * vintage)
objective = solver.Objective()
objective.SetCoefficient(vintage, 1.0)
objective.SetCoefficient(regular, 1.0)
objective.SetMaximization()
small_bouquets = solver.IntVar(0, 80, 'small_bouquets')
large_bouquets = solver.IntVar(20, 50, 'large_bouquets')
solver.Add(small_bouquets + large_bouquets <= 70)
solver.Add(small_bouquets >= 2 * large_bouquets)
objective = solver.Objective()
objective.SetCoefficient(small_bouquets, 5.0)
objective.SetCoefficient(large_bouquets, 10.0)
objective.SetMaximization()
radio_ads = solver.IntVar(15, 40, 'radio_ads')
social_media_ads = solver.IntVar(35, solver.infinity(), 'social_media_ads')
solver.Add(5000 * radio_ads + 9150 * social_media_ads <= 250000)
objective = solver.Objective()
objective.SetCoefficient(radio_ads, 60500.0)
objective.SetCoefficient(social_media_ads, 50000.0)
objective.SetMaximization()
top_loading = solver.IntVar(0, solver.infinity(), 'top_loading')
front_loading = solver.IntVar(0, solver.infinity(), 'front_loading')
solver.Add(50 * top_loading + 75 * front_loading >= 5000)
solver.Add(85 * top_loading + 100 * front_loading <= 7000)
solver.Add(top_loading <= 0.4 * (top_loading + front_loading))
solver.Add(front_loading >= 10)
objective = solver.Objective()
objective.SetCoefficient(top_loading, 1.0)
objective.SetCoefficient(front_loading, 1.0)
objective.SetMinimization()
large_bags = solver.IntVar(0, solver.infinity(), 'large_bags')
tiny_bags = solver.IntVar(20, solver.infinity(), 'tiny_bags')
solver.Add(4 * large_bags + 1.5 * tiny_bags <= 110)
solver.Add(large_bags == 2 * tiny_bags)
objective = solver.Objective()
objective.SetCoefficient(large_bags, 25.0)
objective.SetCoefficient(tiny_bags, 6.0)
objective.SetMaximization()
factory1 = solver.IntVar(0, solver.infinity(), 'factory1')
factory2 = solver.IntVar(0, solver.infinity(), 'factory2')
solver.Add(5 * factory1 + 10 * factory2 >= 20)
solver.Add(6 * factory1 + 10 * factory2 >= 5)
solver.Add(3 * factory1 >= 15)
solver.Add(factory1 * 300 + factory2 * 600 <= 1500.0)
objective = solver.Objective()
objective.SetCoefficient(factory1, 300.0)
objective.SetCoefficient(factory2, 600.0)
objective.SetMinimization()
regular_mix = solver.IntVar(0, solver.infinity(), 'regular_mix')
sour_surprise_mix = solver.IntVar(0, solver.infinity(), 'sour_surprise_mix')
solver.Add(0.8 * regular_mix + 0.1 * sour_surprise_mix <= 80)
solver.Add(0.2 * regular_mix + 0.9 * sour_surprise_mix <= 60)
objective = solver.Objective()
objective.SetCoefficient(regular_mix, 3.0)
objective.SetCoefficient(sour_surprise_mix, 5.0)
objective.SetMaximization()
bagels = solver.IntVar(0, solver.infinity(), 'bagels')
croissants = solver.IntVar(0, solver.infinity(), 'croissants')
solver.Add(2 * bagels + 1 * croissants <= 70)
solver.Add(0.25 * bagels + 2 * croissants <= 32)
objective = solver.Objective()
objective.SetCoefficient(bagels, 20.0)
objective.SetCoefficient(croissants, 40.0)
objective.SetMaximization()
children = solver.IntVar(50, solver.infinity(), 'children')
adult = solver.IntVar(0, solver.infinity(), 'adult')
solver.Add(50 * children + 75 * adult <= 20000)
solver.Add(children >= 50)
solver.Add(adult >= 0.7 * (children + adult))
objective = solver.Objective()
objective.SetCoefficient(children, 50.0)
objective.SetCoefficient(adult, 75.0)
objective.SetMinimization()
s = solver.IntVar(0, solver.infinity(), 's')
l = solver.IntVar(0, solver.infinity(), 'l')
solver.Add(20 * s + 50 * l >= 500)
solver.Add(l <= 0.2 * (s + l))
objective = solver.Objective()
objective.SetCoefficient(s, 1.0)
objective.SetCoefficient(l, 1.0)
objective.SetMinimization()
A = solver.IntVar(0, solver.infinity(), 'A')
B = solver.IntVar(0, solver.infinity(), 'B')
solver.Add(3 * A + 6 * B >= 40)
solver.Add(5 * A + 1 * B >= 50)
objective = solver.Objective()
objective.SetCoefficient(A, 4.0)
objective.SetCoefficient(B, 5.0)
objective.SetMinimization()
